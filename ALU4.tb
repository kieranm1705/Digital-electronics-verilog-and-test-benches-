`timescale 1ns/1ps
module alu_4bit_tb;
    reg  [3:0] a, b;
    reg  [1:0] op;
    wire [3:0] result;
    wire cout;

    alu_4bit dut(.a(a), .b(b), .op(op), .result(result), .cout(cout));

    initial begin
        $display(" time    op  a    b   | result cout");
        a = 4'b0011; b = 4'b0001;

        op = 2'b00; #10; // ADD -> 0011 + 0001 = 0100
        op = 2'b01; #10; // SUB -> 0011 - 0001 = 0010
        op = 2'b10; #10; // AND -> 0001
        op = 2'b11; #10; // OR  -> 0011 | 0001 = 0011

        a = 4'b1111; b = 4'b0001;
        op = 2'b00; #10; // ADD -> 0000 with cout=1
        op = 2'b01; #10; // SUB -> 1110

        $stop;
    end
endmodule
